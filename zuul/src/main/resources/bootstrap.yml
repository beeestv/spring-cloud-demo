server:
  port: 10002
  servlet:
    contextPath: /

spring:
  application:
    name: zuul-service
  profiles:
    active: dev
  cloud:
    consul:
      host: localhost
      port: 8500
      discovery:
        preferIpAddress: true
        instanceId: ${spring.application.name}:${spring.cloud.client.ip-address}:${server.port}
        healthCheckPath: /actuator/health
        healthCheckInterval: 15s
  sleuth:
    sampler:
      probability: 1.0
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://localhost:3306/zuul?useUnicode=true&characterEncoding=utf8&useSSL=false
    username: root
    password: 123456
    type: com.alibaba.druid.pool.DruidDataSource
    initialSize: 5
    # 配置获取连接等待超时的时间   
    maxWait: 60000
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    # 配置一个连接在池中最小生存的时间，单位是毫秒 
    minEvictableIdleTimeMillis: 300000
    validationQuery: SELECT 1 FROM DUAL
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    # 打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
    # 合并多个DruidDataSource的监控数据 
    useGlobalDataSourceStat: true

  zipkin:
    base-url: http://192.168.14.78:10005
    sender:
      type: web
  boot:
    admin:
      client:
        url: http://192.168.14.78:10006
        instance:
          prefer-ip: true

management:
  metrics:
    web:
      server:
        auto-time-requests: false
  endpoints:
    web:
      exposure:
        include: '*'

logging:
  level:
    root: warn
#    com.netflix: debug
    me.huzhiwei.zuul.mapper: debug
    me.huzhiwei.zuul.config: trace
  file: log/zuul.log

ribbon:
  ConnectTimeout: 120000
  ReadTimeout: 120000

pagehelper:
  helper-dialect: mysql
  reasonable: true
  support-methods-arguments: true
  params: count=countSql

mybatis:
  mapper-locations: classpath*:/mapper/*.xml